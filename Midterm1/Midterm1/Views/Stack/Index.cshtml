
@{
    ViewBag.Title = "Stack";
}

<link rel="stylesheet" type="text/css" href="~/Content/StyleSheetCustom.css">

<!DOCTYPE html>
<html>
<title>W3.CSS</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<body>

    <!-- Sidebar -->
    <div class="w3-sidebar w3-light-grey w3-bar-block" style="width:20%">
        <h3 class="w3-bar-item">Menu</h3>
        <a href="@Url.Action("addOne", "Stack")" class="w3-bar-item w3-button">1. Add one time to Stack</a>
        <a href="@Url.Action("hugeList", "Stack")" class="w3-bar-item w3-button">2. Add Huge List of Items to Stack</a>
        <a href="@Url.Action("displayStack","Stack")" class="w3-bar-item w3-button">3. Display Stack</a>
        <a href="@Url.Action("popStack","Stack")" class="w3-bar-item w3-button">4. Delete from Stack</a>
        <a href="@Url.Action("clearStack","Stack")" class="w3-bar-item w3-button">5. Clear Stack</a>
        <a href="@Url.Action("searchStack","Stack")" class="w3-bar-item w3-button">6. Search Stack</a>
        <a href="@Url.Action("Index", "Index")" class="w3-bar-item w3-button">7. Return to Main Menu</a>
    </div>

    <!-- ViewBag.Output total concatenation displayed -->
    @Html.Raw((String)ViewBag.Output)


    <!-- Page Content -->
    <div style="margin-left:25%">

        <div class="w3-container w3-teal">
            <h1>Stack Page</h1>
        </div>

        <!-- Nerd Kid pic! -->
        <img src="~/Graphics/Stack.jpg" alt="Stack" style="width:100%">

        <!-- A brief explanation of what a Stack is. this will always display above the output (or ViewBag) -->
        <div class="w3-container">
            <h2>The Stack Page</h2>
            <p>A Stack is a data storage type where we can add and take away values.</p>
            <p>The Stack is LIFO, the last element we push on is the first we would take off.</p>
        </div>

        <!--------------------------------------------------------------------------------------------------------------------------------
    *
    *       The area below is everything to do with the ViewBag
    *       ViewBag.Stack           will list all the items within the Stack
    *       ViewBag.Search          Will display within the text box whether there is something to search for or not. also allows form to be displayed.
    *       ViewBag.Searched        Will display whether search result of found or not found within stack
    *       ViewBag.Delete          will be shown if there is nothing within the Stack to be displayed
    *
    *--------------------------------------------------------------------------------------------------------------------------------->
        
        <!--will display the stack-->
        @if (ViewBag.Stack != null)
        {
            <div>
                @foreach (var item in ViewBag.Stack)
                {
                    <p>
                        @item
                    </p>
                }
            </div>
        }

        <!--this will generate a form for users to search for specific items in the stack-->
        <div>
            @if (ViewBag.Search != null)
            {
                <br />
                using (Html.BeginForm("SearchStack", "Stack", FormMethod.Post))
                {
                    <label for="inputEmail">Search:</label>
                    @Html.TextBox("search")
                    <button type="submit">Submit</button>
                }
            }
        </div>

        <!-- displays the results of the search form, whether found or not found, or empty stack -->
        <div>
            @if (ViewBag.Searched != null)
            {
                <p>
                    @ViewBag.Searched
                </p>
            }
        </div>

        <!-- Will display results of the stack is empty -->
        <div>
            @if (ViewBag.Delete != null)
            {
                @ViewBag.Delete
            }
        </div>
    </div>
</body>
</html>